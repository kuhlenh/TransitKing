# top-most EditorConfig file
root = true

# Don't use tabs for indentation for any file.
[*]
indent_style = space

# Code files indent size
[*.{cs,csx,vb,vbx}]
indent_size = 4

# Xml project files indent size
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# Xml config files indent size
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files indent size
[*.json]
indent_size = 2

[*.{cs,vb}]
# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true

# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# CSharp-Specific Coding Conventions
[*.cs]
# Do not prefer "var" everywhere
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = false:suggestion
csharp_style_var_elsewhere = false:suggestion

# Prefer method-like and property-like constructs to have a block body
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_constructors = true:suggestion
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Naming Conventions
## StyleCop 4.5 SA1300: ElementMustBeginWithUpperCaseLetter
## A violation of this rule occurs when the names of certain types of elements do not begin with an upper-case letter.
dotnet_naming_style.sa1300_style.capitalization = first_word_upper
dotnet_naming_symbols.sa1300_symbols.applicable_kinds = namespace,class,enum,struct,delegate,event,method,property
dotnet_naming_symbols.sa1300_symbols.applicable_accessibilities = *
dotnet_naming_rule.sa1300.severity = error
dotnet_naming_rule.sa1300.symbols = sa1300_symbols
dotnet_naming_rule.sa1300.style = sa1300_style

## StyleCop 4.5 SA1302: InterfaceNamesMustBeginWithI
## A violation of this rule occurs when the name of an interface does not begin with the capital letter I.
dotnet_naming_style.sa1302_style.capitalization = first_word_upper
dotnet_naming_style.sa1302_style.required_prefix = I
dotnet_naming_symbols.sa1302_symbols.applicable_kinds = interface
dotnet_naming_symbols.sa1302_symbols.applicable_accessibilities = *
dotnet_naming_rule.sa1302.severity = warning
dotnet_naming_rule.sa1302.symbols = sa1302_symbols
dotnet_naming_rule.sa1302.style = sa1302_style

## StyleCop 4.5 SA1303: ConstFieldNamesMustBeginWithUpperCaseLetter
## A violation of this rule occurs when the name of a field marked with the const attribute does not begin with an upper-case letter.
dotnet_naming_style.sa1303_style.capitalization = first_word_upper
dotnet_naming_symbols.sa1303_symbols.applicable_kinds = field
dotnet_naming_symbols.sa1303_symbols.applicable_accessibilities = *
dotnet_naming_symbols.sa1303_symbols.required_modifiers = const
dotnet_naming_rule.sa1303.severity = warning
dotnet_naming_rule.sa1303.symbols = sa1303_symbols
dotnet_naming_rule.sa1303.style = sa1303_style

## StyleCop 4.5 SA1304: NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter
## The name of a non-private readonly C# field must being with an upper-case letter.
dotnet_naming_style.sa1304_style.capitalization = first_word_upper
dotnet_naming_symbols.sa1304_symbols.applicable_kinds = field
dotnet_naming_symbols.sa1304_symbols.applicable_accessibilities = public,internal,protected,protected_internal
dotnet_naming_rule.sa1304.severity = warning
dotnet_naming_rule.sa1304.symbols = sa1304_symbols
dotnet_naming_rule.sa1304.style = sa1304_style

## StyleCop 4.5 SA1307: AccessibleFieldsMustBeginWithUpperCaseLetter
## In addition, any field which is public or internal should begin with an upper-case letter.
## dotnet_naming_rule.sa1307.format = "^[A-Z]"
dotnet_naming_style.sa1307_style.capitalization = first_word_upper
dotnet_naming_symbols.sa1307_symbols.applicable_kinds = field
dotnet_naming_symbols.sa1307_symbols.applicable_accessibilities = public,internal
dotnet_naming_rule.sa1307.severity = warning
dotnet_naming_rule.sa1307.symbols = sa1307_symbols
dotnet_naming_rule.sa1307.style = sa1307_style

# Newline settings:
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true

# Spacing settings:
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_name_and_open_parenthesis = false

# Wrapping settings:
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true